# Global Agent Configuration
[agent]
  interval = "10s" # Default polling interval, cocok dengan skrip Python Anda
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = true # Set ke true untuk debugging jika perlu
  quiet = false
  hostname = ""
  omit_hostname = false

# Output Plugin: InfluxDB v2
[[outputs.influxdb_v2]]
  urls = ["http://127.0.0.1:8086"] # Menggunakan localhost karena Telegraf ada di network_mode: host
  token = "th1s_1s_a_v3ry_s3cur3_4nd_l0ng_4dm1n_t0k3n_f0r_d3v" # Token dari environment InfluxDB Anda
  organization = "iot_project_alpha" # Organisasi dari environment InfluxDB Anda
  bucket = "sensor_data_primary" # Bucket dari environment InfluxDB Anda
  # timeout = "5s"
  # insecure_skip_verify = false

# Input Plugins: HTTP, satu instance per perangkat

# Perangkat 1: ID LOGGER:2D3032, LOKASI:F2, IP ADDRESS:10.6.0.2
[[inputs.http]]
  urls = ["http://10.6.0.2/"]
  name_override = "sensor_reading" # Nama measurement di InfluxDB
  method = "GET"
  timeout = "5s" # Timeout permintaan HTTP
  data_format = "grok"
  # Pola Grok untuk mem-parsing data: humidity#temperature#hex_id_from_data
  # Juga mencoba menangani jika data terbungkus dalam <body>...</body> secara opsional
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]
  
  # Tag spesifik untuk perangkat ini
  [inputs.http.tags]
    device_id = "2D3032"
    location = "F2"
    source_ip = "10.6.0.2"

# Perangkat 2: ID LOGGER:2D303B, LOKASI:F3, IP ADDRESS:10.6.0.3
[[inputs.http]]
  urls = ["http://10.6.0.3/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D303B"
    location = "F3"
    source_ip = "10.6.0.3"


# Perangkat 3: ID LOGGER:2D3031, LOKASI:F4, IP ADDRESS:10.6.0.4
[[inputs.http]]
  urls = ["http://10.6.0.4/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D3031"
    location = "F4"
    source_ip = "10.6.0.4"

# Perangkat 4: ID LOGGER:2D3036, LOKASI:F5, IP ADDRESS:10.6.0.5
[[inputs.http]]
  urls = ["http://10.6.0.5/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D3036"
    location = "F5"
    source_ip = "10.6.0.5"

# Perangkat 5: ID LOGGER:2D303A, LOKASI:F6, IP ADDRESS:10.6.0.6
[[inputs.http]]
  urls = ["http://10.6.0.6/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D303A"
    location = "F6"
    source_ip = "10.6.0.6"

# Perangkat 6: ID LOGGER:2D3038, LOKASI:G2, IP ADDRESS:10.6.0.7
[[inputs.http]]
  urls = ["http://10.6.0.7/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D3038"
    location = "G2"
    source_ip = "10.6.0.7"

# Perangkat 7: ID LOGGER:2D3039, LOKASI:G3, IP ADDRESS:10.6.0.8
[[inputs.http]]
  urls = ["http://10.6.0.8/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D3039"
    location = "G3"
    source_ip = "10.6.0.8"

# Perangkat 8: ID LOGGER:2D303F, LOKASI:G4, IP ADDRESS:10.6.0.9
[[inputs.http]]
  urls = ["http://10.6.0.9/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D303F"
    location = "G4"
    source_ip = "10.6.0.9"

# Perangkat 9: ID LOGGER:2D3033, LOKASI:G5, IP ADDRESS:10.6.0.10
[[inputs.http]]
  urls = ["http://10.6.0.10/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D3033"
    location = "G5"
    source_ip = "10.6.0.10"

# Perangkat 10: ID LOGGER:2D3034, LOKASI:G6, IP ADDRESS:10.6.0.11
[[inputs.http]]
  urls = ["http://10.6.0.11/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D3034"
    location = "G6"
    source_ip = "10.6.0.11"

# Perangkat 11: ID LOGGER:2D3035, LOKASI:G7, IP ADDRESS:10.6.0.12
[[inputs.http]]
  urls = ["http://10.6.0.12/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D3035"
    location = "G7"
    source_ip = "10.6.0.12"

# Perangkat 12: ID LOGGER:2D303D, LOKASI:G8, IP ADDRESS:10.6.0.13
[[inputs.http]]
  urls = ["http://10.6.0.13/"]
  name_override = "sensor_reading"
  method = "GET"
  timeout = "5s"
  data_format = "grok"
  grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]

  [inputs.http.tags]
    device_id = "2D303D"
    location = "G8"
    source_ip = "10.6.0.13"

# Input Plugin: BMKG Weather Forecast Data untuk Kode Wilayah 31.74.06.1001
[[inputs.http]]
  urls = ["https://api.bmkg.go.id/publik/prakiraan-cuaca?adm4=31.74.06.1001"]
  method = "GET"
  interval = "3h" # Mengambil data setiap 3 jam
  timeout = "30s"
  data_format = "json"
  name_override = "bmkg_weather_forecast"
  json_query = "data.0.cuaca.#.#" # Menambahkan query untuk menavigasi JSON
  json_time_key = "utc_datetime"
  json_time_format = "2006-01-02 15:04:05" # Format timestamp Go untuk YYYY-MM-DD HH:mm:ss
  tag_keys = [
    "local_datetime",
    "weather_desc",
    "weather_desc_en",
    "wd"
  ]

  [inputs.http.tags]
    source = "bmkg"
    kode_wilayah = "31.74.06.1001"

# --- INSTRUKSI UNTUK PERANGKAT LAIN ---
# Untuk menambahkan perangkat lain dari device_list.csv, salin blok [[inputs.http]] di atas,
# dan perbarui nilai untuk `urls`, `device_id`, `location`, dan `source_ip`
# sesuai dengan setiap baris di file CSV Anda.
# Contoh:
#
# [[inputs.http]]
#   urls = ["http://<IP_ADDRESS_PERANGKAT_BERIKUTNYA>/"]
#   name_override = "sensor_reading"
#   method = "GET"
#   timeout = "5s"
#   data_format = "grok"
#   grok_patterns = ["(?:%{GREEDYDATA}<body>)?%{NUMBER:humidity:float}#%{NUMBER:temperature:float}#%{NOTSPACE:hex_id_from_data:string}(?:</body>%{GREEDYDATA})?"]
#
#   [inputs.http.tags]
#     device_id = "<ID_LOGGER_PERANGKAT_BERIKUTNYA>"
#     location = "<LOKASI_PERANGKAT_BERIKUTNYA>"
#     source_ip = "<IP_ADDRESS_PERANGKAT_BERIKUTNYA>"
